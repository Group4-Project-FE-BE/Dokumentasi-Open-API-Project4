openapi: 3.0.0
info:
  description: |
    This is a sample Petstore server.  You can find
    out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "1.0.0"
  title: Sosmed Kucing
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Group4-Project-FE-BE/openapi_project2_team4/1.0.0
  - url: 'https://petstore.swagger.io/v2'
tags:
  - name: User #login, register, lihat profile user, update profile user, delelte profile (non aktif dgn delete gorm)
    description: API mengelola fitur User  
  - name: Posting  # add, get all, get by id, update, delete
    description: API mengelola fitur Postingan
  - name: Comment # add, get all comment by posting id, update by id comment, delete
    description: API mengelola fitur komentar

paths:
  /login:
    post:
      summary: "Login User"
      tags:
      - "User"
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              type: object
              properties:
                "email":
                  type: string
                "password":
                  type: string
            example:
              email: "cecep@gmail.com"
              password: "123"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesLoginResult"
              example:
                message: "Login Success"
                data:
                  id: 1
                  email: "cecep@gmail.com"
                  name: "cecep"
                  phone: "089234324"
                  bio: "cat lovers"
                  token: "bC5jb20ifQ.TKw15NmLbSdIRwXWiu6UiMIudaCe5ecqyANNvA7YL"
        "400" :
          $ref : "#/components/responses/400"  
        '500':
          $ref: "#/components/responses/500"

  /register :
    post:
      summary: "Insert Data User"
      tags:
      - "User"
      requestBody:
        required: true
        content:
          "application/json":
             schema:
                $ref: "#/components/schemas/InsertUserObject"
             example:
              email: "cecep@gmail.com"
              password: "123"
              name: "cecep"
      responses:
        "201":
          description: "Success create data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "User successfully created"
                data:
                  id: 1
                  email: "cecep@gmail.com"
                  name: "cecep"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"
        '500':
          $ref: "#/components/responses/500"
  /users :
    put: 
      security:
        - bearerAuth: []
      summary: "Update Data user"
      tags:
        - "User"
      requestBody:
        description: "Update user data"
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/EditUserObject"
            example:
              data:
                email: "cecep@gmail.com"
                password: "123"
                name: "boris"
                phone: "089234324"
                bio: "cat lovers"
                gender : "male"
                location : "Jakarta"
      responses:
        '200':
          description: "Success update data"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Success update data"
                data:
                  id: 1
                  email: "cecep@gmail.com"
                  name: "boris"
                  phone: "089234324"
                  bio: "cat lovers"
                  gender : "male"
                  location : "Jakarta"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"           
        '500':
          $ref: "#/components/responses/500"
    get:
      security:
        - bearerAuth: []    
      summary: "Get Users Data"
      tags:
      - "User"
      responses:
        "200":
          description: "Success Get Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesArrayResult"
              example:
                message: "Success Get Data"
                data:
                - id: 1
                  email: "Bondan@gmail.com"
                  name: "Bondan"
                  phone: "089234324"
                  bio: "serbian cat lovers"
                  is_active: true            
                - id: 2
                  email: "Susi@gmail.com"
                  name: "Susi"
                  phone: "089234324"
                  bio: "serbian cat lovers"
                  is_active: true            
                - id: 3
                  email: "Jiah@gmail.com"
                  name: "Jiah"
                  phone: "089234324"
                  bio: "serbian cat lovers"
                  is_active: true            
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"
        "500" :
          $ref : "#/components/responses/500"
  /users/{email}:
    get:
      security:
        - bearerAuth: []    
      summary: "User Data"
      tags:
      - "User"
      parameters:
        - name: email
          in: path
          description: "Email parameter"
          required: true
          schema:
           type: string
          examples:
            email: 
              value: "cecep@gmail.com"
      responses:
        "200":
          description: "Success Get Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Success Get Data"
                data:
                  id: 1
                  email: "cecep@gmail.com"
                  name: "cecep"
                  phone: "089234324"
                  bio: "serbian cat lovers"
                  is_active: true            
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"
        "500" :
          $ref : "#/components/responses/500"
    
    delete:
      security:
        - bearerAuth: []
      summary: "Delete User Data"
      tags:
        - "User"
      parameters:
        - name: email
          in: path
          description: "Email parameter"
          required: true
          schema:
           type: string
          examples:
            email: 
              value: "cecep@gmail.com"
      responses:
        "200":
          description: "Success Delete Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Success Delete Data"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"
  /postings :
    get :
      summary: "Show All posting with login and without login "
      tags:
        - "Posting"
      parameters:
        - name: offset
          in: query
          description: "Offset comment result."
          required: true 
          schema:
            type: integer
          examples:
            20:
              description: "Offset = 20. Show starting from index 20."
              value: 20
            43:
              description: "Offset = 43. Show starting from index 43."
              value: 43
        - name: limit
          in: query
          description: "Limit comment result"
          required: true 
          schema:
            type: integer
          examples:
            30:
              description: "Limit = 30. Show max 30 data."
              value: 30
            20:
              description: "Limit = 20. Show max 20 data."
              value: 20          
      responses :
        "200" :
          description: "Show all posting without login"
          content:
            application/json :
              schema :
                $ref : "#/components/schemas/ArrayPostingObj"
              example :
                message: "Success get postings"
                data :
                - id: 1
                  name_user: "Jojo"
                  image_url : "https://www.hillspet.com/content/dam/cp-sites/hills/hills-pet/en_us/exported/cat-care/images/cat-sleeping-in-yellow-cat-bed-SW.jpg"              
                  content: |
                    We are on vacation for 2 weeks and Louie is very missed ðŸ¥º but we are grateful aunt @melody_lim stepped in to help take good cafe of Louie while we are away. His fav napping spot is on her study materialsâ€¦. ðŸ˜¶ . . . . #cats #catsofinstagram #catlover #catlife #instacat #meow #kitten #catoftheday #kitty #cute #petsofinstagram #kittensofinstagram #catlove #adoptdontshop #catstagram #vancouver #rescuecat #rescuecatsofinstagram #dailyfluff #vancouvercats
                  id_user: 5
                - id: 2
                  name_user: "Charles"
                  image_url : "https://pawmaw.com/pawmaw/img/blog-img/1566853305-Stressed-Cat.jpg"
                  content: |
                    My buddy Simba 16 years old. It''s just us now since his brother Mojo 20 is gone. He is my constant companion #cats #catsofinstagram #catstagram #catsagram
                  id_user: 5

        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"
        "500" :
          $ref : "#/components/responses/500"
    post :
      security:
        - bearerAuth: []
      summary: "Insert posting"
      tags:
        - "Posting"
      requestBody :
        required: true
        content :
          multipart/from-data :
            schema :
              $ref : "#/components/schemas/InsertPostingObject" 
            example:          
              image_url: "https://pawmaw.com/pawmaw/img/blog-img/1566853305-Stressed-Cat.jpg"
              # "image":
              #   imageId: 2
              #   fileName: cat.png
              #   imageUrl: "https://pawmaw.com/pawmaw/img/blog-img/1566853305-Stressed-Cat.jpg"
              content: |
                My buddy Simba 16 years old. Iti's just us now since his brother Mojo 20 is gone. He is my constant companion #cats #catsofinstagram #catstagram #catsagram
      responses :
        "201" :
          description: "Success insert posting"
          content:
            application/json :
              schema :
                $ref : "#/components/schemas/EditPostingObject"
              example :
                message: "Succes edit posting"
                data :
                - id: 2
                  name_user: "Charles"
                  image_url : "https://pawmaw.com/pawmaw/img/blog-img/1566853305-Stressed-Cat.jpg"
                  content: |
                    My buddy Simba 16 years old. It''s just us now since his brother Mojo 20 is gone. He is my constant companion #cats #catsofinstagram #catstagram #catsagram
                  id_user: 5
  /postings/{id_posting}/comments:
    get:
      summary: "Show 1 Posting And All Its Comments"
      description: "Show 1 posting and get all comments data that relate to the posting by Posting Id. Default Limit 25 Data. You can use offset and limit query clause for show comments."
      tags:
      - "Posting"
      parameters:
        - $ref: "#/components/parameters/ParamPathPosting"
        - name: offset
          in: query
          description: "Offset comment result"
          required: true 
          schema:
            type: integer
          examples:
            20:
              description: "Offset = 20. Show starting from index 20."
              value: 20
            43:
              description: "Offset = 43. Show starting from index 43."
              value: 43
        - name: limit
          in: query
          description: "Limit comment result"
          required: true 
          schema:
            type: integer
          examples:
            30:
              description: "Limit = 30. Show max 30 data."
              value: 20
            20:
              description: "Limit = 20. Show max 20 data."
              value: 20
      responses:
        "200":
          description: "Success Get Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesArrayResult"
              example:
                message: "Successfully get comments."
                data:
                - id: 1
                  name_user: "Jojo"
                  image_url : "https://www.hillspet.com/content/dam/cp-sites/hills/hills-pet/en_us/exported/cat-care/images/cat-sleeping-in-yellow-cat-bed-SW.jpg"              
                  content: |
                    We are on vacation for 2 weeks and Louie is very missed ðŸ¥º but we are grateful aunt @melody_lim stepped in to help take good cafe of Louie while we are away. His fav napping spot is on her study materialsâ€¦. ðŸ˜¶ . . . . #cats #catsofinstagram #catlover #catlife #instacat #meow #kitten #catoftheday #kitty #cute #petsofinstagram #kittensofinstagram #catlove #adoptdontshop #catstagram #vancouver #rescuecat #rescuecatsofinstagram #dailyfluff #vancouvercats
                  id_user: 5
                  comments:
                  - id: 1
                    content: |
                      It's your day, kitties! Go on, snooze, snack, and zoom-zoom! ðŸ˜» #caturday #cats #cat #love #nalacat #catfood 
                    id_user: 1
                    id_posting: 3
                  - id: 2
                    content: |
                      What are you going to be for Halloween ? ðŸŽƒ ðŸ‘» #lovenalahalloween2022 #meow #cute #catsofinstagram 
                    id_user: 1
                    id_posting: 3
                  - id: 3
                    content: |
                      The original shark hat ðŸ˜» #shark 
                    id_user: 1
                    id_posting: 3
                  metadata:
                    result_set:
                      count: 10, #count data returned
                      offset: 5,
                      limit: 15, 
                      total: 50, #total data
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '500':
          $ref: "#/components/responses/500"

  /postings/{id_posting}:
    get :
      summary: "Show 1 Posting By id"
      tags:
        - "Posting"
      parameters:
        - $ref : "#/components/parameters/ParamPathPosting"
      responses :
        "200" :
          description: "Show 1 Posting by id"
          content:
            application/json :
              schema :
                $ref : "#/components/schemas/ArrayPostingObj"
              example :
                message: "Success get posting"
                data :
                - id: 2
                  name_user: "Charles"
                  image_url : "https://pawmaw.com/pawmaw/img/blog-img/1566853305-Stressed-Cat.jpg"
                  content: |
                    My buddy Simba 16 years old. It''s just us now since his brother Mojo 20 is gone. He is my constant companion #cats #catsofinstagram #catstagram #catsagram
                  id_user: 5

        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"
        "500" :
          $ref : "#/components/responses/500"
                 
    put :
      security:
        - bearerAuth: []
      summary: "Update posting"
      tags:
        - "Posting"
      parameters:
        - $ref: "#/components/parameters/ParamPathPosting"
      requestBody :
        required: true
        content :
          multipart/from-data :
            schema :
              $ref : "#/components/schemas/EditPostingObject" 
            example:
              - id: 2
                image_url: "https://pawmaw.com/pawmaw/img/blog-img/1566853305-Stressed-Cat.jpg"
                # "image":
                #   imageId: 2
                #   fileName: cat.png
                #   imageUrl: "https://pawmaw.com/pawmaw/img/blog-img/1566853305-Stressed-Cat.jpg"
                content: |
                  My buddy Simba 16 years old. Iti's just us now since his brother Mojo 20 is gone. He is my constant companion #cats #catsofinstagram #catstagram #catsagram                  
      responses :
        "200" :
          description: "Update Posting"
          content:
            application/json :
              schema :
                $ref : "#/components/schemas/EditPostingObject"
              example :
                message: "Success update posting"
                data :
                - id: 2
                  name_user: "Charles"
                  image_url : "https://pawmaw.com/pawmaw/img/blog-img/1566853305-Stressed-Cat.jpg"
                  content: |
                    My buddy Simba 16 years old. It''s just us now since his brother Mojo 20 is gone. He is my constant companion #cats #catsofinstagram #catstagram #catsagram #lovekitty
                  id_user: 5
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"
        "500" :
          $ref : "#/components/responses/500"

    delete :
      security:
        - bearerAuth: []
      summary: "Delete posting by id posting"
      tags:
        - "Posting"
      parameters:
        - $ref: "#/components/parameters/ParamPathPosting"
      responses :
        "200":
          description: "Delete Posting Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Posting successfully deleted."
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"
        "500" :
          $ref : "#/components/responses/500"
  /comments:
    post:
      security:
        - bearerAuth: []
      summary: "Insert Comment Data" 
      tags:
        - "Comment"
      requestBody :
        required: true
        content:
          "application/json":
            schema:
              $ref : "#/components/schemas/InsertCommentObject"  
            example:
              comment_value: |
                It's your day, kitties! Go on, snooze, snack, and zoom-zoom! ðŸ˜» #caturday #cats #cat #love #nalacat #catfood 
              id_posting: 3
      responses:
        "201":
          description: "Success create data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Comment successfully created."
                data:
                  id: 1
                  name_user: "Jojo"
                  comment_value: |
                    It's your day, kitties! Go on, snooze, snack, and zoom-zoom! ðŸ˜» #caturday #cats #cat #love #nalacat #catfood 
                  id_user: 1
                  id_posting: 3
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '500':
          $ref: "#/components/responses/500" 
  /comments/{id_comment}:
    put:
      security:
        - bearerAuth: []
      summary: "Update Comment Data By Id"
      tags:
        - "Comment"
      parameters:
        - $ref: "#/components/parameters/ParamPathComment"
      requestBody :
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/EditCommentObject"
            example:
              comment_value: |
                Can't wait to watch it ðŸ”¥ðŸ”¥
              id_posting: 3
      responses:
        "200":
          description: "Success Update data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Comment successfully updated."
                data:
                  id: 1
                  name: "jojo"
                  comment_value: |
                    Can't wait to watch it ðŸ”¥ðŸ”¥
                  id_user: 1
                  id_posting: 3
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"                    
        '500':
          $ref: "#/components/responses/500"   
    delete:
      security:
        - bearerAuth: []
      summary: "Delete Comment Data By Id"
      tags:
      - "Comment"
      parameters:
        - $ref: "#/components/parameters/ParamPathComment"
      responses:
        "200":
          description: "Success Delete Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Comment successfully deleted."
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"                    
        '500':
          $ref: "#/components/responses/500"
components:
  securitySchemes:
    "bearerAuth" :
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    "ParamPathPosting":
      name : id_posting
      in : path
      description: "Id posting"
      required: true
      schema :
        type: integer
      examples:
        1 :
          description: "example posting id 1 "
          value : 1
        2:
          description: "example posting id 2"
          value : 2
        3 :
          description: "example posting id 3"
          value: 3
    "ParamPathComment":
      name : id_comment
      in : path
      description: "Id comment"
      required: true
      schema :
        type: integer
      examples:
        1 :
          description: "example comment id 1 "
          value : 1
        2:
          description: "example comment id 2"
          value : 2
        3 :
          description: "example comment id 3"
          value: 3
  schemas:
    "GetUserObject":
      type: object
      properties:
        "id":
          type: integer
        "email":
          type: string
        "name":
          type: string
        "phone":
          type: string
        "bio":
          type: string  
        "gender":
          type: string  
        "location":
          type: string  
    "ArrayUserObj":
      type: array
      items :
        $ref: "#/components/schemas/GetUserObject"
    "InsertUserObject":
      type: object
      properties:
        "id":
          type: integer
        "email":
          type: string
        "password":
          type: string
        "name":
          type: string
        "phone":
          type: string
        "bio":
          type: string    
    "EditUserObject":
      type: object
      properties:
        "email":
          type: string
        "password":
          type: string
        "name":
          type: string
        "phone":
          type: string
        "gender":
          type: string
        "location":
          type: string
        "bio":
          type: string 
    "PostingObject":
      type: object
      properties:
        "id":
          type: integer
        "name_user":
          type: string
        "image":
          properties:
            imageId:
              type: integer
            imageUrl:
              type: string
            fileName:
              type: string
              format: binary
        "content":
          type: string
        "id_user":
          type: integer
    "InsertPostingObject":
      type: object
      properties:
        "name_user":
          type: string
        "image":
          properties:
            imageId:
              type: integer
            imageUrl:
              type: string
            fileName:
              type: string
              format: binary
        "content":
          type: string
        "id_user":
          type: integer
    "EditPostingObject":
      type: object
      properties:
        "name_user":
          type: string
        "image":
          properties:
            imageId:
              type: integer
            imageUrl:
              type: string
            fileName:
              type: string
              format: binary
        "content":
          type: string

    "CommentObject":
      type: object
      properties:
        "id":
          type: integer
        "name":
          type: integer
        "comment_value":
          type: string
        "id_user":
          type: integer
        "id_posting":
          type: string
    "InsertCommentObject":
      type: object
      properties:
        "name":
          type: string
        "comment_value":
          type: string
        "id_user":
          type: integer
        "id_posting":
          type: string  
    "EditCommentObject":
      type: object
      properties:
        "comment_value":
          type: string    
    "ArrayPostingObj":
      type: array
      items :
        $ref: "#/components/schemas/PostingObject"
    "ArrCommentObject":
      type: array
      items:
        $ref: "#/components/schemas/CommentObject"    
    "SuccessResult":
      type: object
      properties:
        message: 
          type: string
        data:
          type: object
    "SuccesLoginResult":
      type: object
      properties:
        message: 
          type: string
        data:
          type: object
        token: 
          type: string
    "SuccesArrayResult":
      type: object
      properties:
        message: 
          type: string
        data:
          type: array
          items : 
            $ref: "#/components/schemas/ArrCommentObject"
          
  responses:
    '200':
      description: "Success Process Data"
      content:
        application/json:
          schema:
            type: object
            properties:
              message: 
                type: string
              data:
                type: object
    '201':
      description: "Success Create Data"
      content:
        application/json:
          schema:
            type: object
            properties:
              message: 
                type: string
              data:
                type: object
    '400':
      description: "Wrong Request From User"
      content:
        "application/json":
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "Process Failed. Please check your input."
    '401':
      description: "Authorization information is missing or invalid."
      content:
        "application/json":
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "Process Failed. User not authorized for this request."
    '500':
      description: "Error from server"
      content:
        "application/json":
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "Process Failed. Please check server."